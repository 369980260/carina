{
    "docs": [
        {
            "location": "/", 
            "text": "Carina Automation Framework\n\n\nCarina is a Java-based test automation framework that unites all testing layers: Mobile applications (web, native, hybrid), WEB applications, REST services, Databases.\n\n\n\n\n\n\nCarina framework is built on top of most popular open-source solutions like Selenium, Appium, TestNG allowing to reduce dependence on specific technology stack.\n\n\n\n\n\n\nCarina supports all popular browsers (IE, Safari, Chrome, Firefox) and mobile devices (iOS/Android). Special feature for mobile domain: it reuses test automation code between IOS/Android up to 70-80%.\n\n\n\n\n\n\nAs far as our framework is built in Java, it is cross-platform. Tests may be easily executed both on Unix or Windows OS. All you need is JDK 8 installed.\n\n\n\n\n\n\nFramework supports different types of databases - both relational and nonrelational (MySQL, SQL Server, Oracle, PostgreSQL), providing amazing experience of DAO layer implementation using MyBatis ORM framework.\n\n\n\n\n\n\nAPI testing is based on Freemarker template engine. It enables great flexibility in generating REST requests and responses are dynamically changed by incoming arguments.\n\n\n\n\n\n\nTRY DEMO PROJECT NOW", 
            "title": "Overview"
        }, 
        {
            "location": "/#carina-automation-framework", 
            "text": "Carina is a Java-based test automation framework that unites all testing layers: Mobile applications (web, native, hybrid), WEB applications, REST services, Databases.    Carina framework is built on top of most popular open-source solutions like Selenium, Appium, TestNG allowing to reduce dependence on specific technology stack.    Carina supports all popular browsers (IE, Safari, Chrome, Firefox) and mobile devices (iOS/Android). Special feature for mobile domain: it reuses test automation code between IOS/Android up to 70-80%.    As far as our framework is built in Java, it is cross-platform. Tests may be easily executed both on Unix or Windows OS. All you need is JDK 8 installed.    Framework supports different types of databases - both relational and nonrelational (MySQL, SQL Server, Oracle, PostgreSQL), providing amazing experience of DAO layer implementation using MyBatis ORM framework.    API testing is based on Freemarker template engine. It enables great flexibility in generating REST requests and responses are dynamically changed by incoming arguments.    TRY DEMO PROJECT NOW", 
            "title": "Carina Automation Framework"
        }, 
        {
            "location": "/getting_started/", 
            "text": "Install and configure JDK 1.8+\n\n\nInstall and configure \nApache Maven 3.5.2+\n\n\nDownload and start the latest \nSelenium standalone server\n\n\nDownload the latest version of \nEclipse\n and install \nTestNG plugin\n\n\n\n\nGenerating project\n\n\nThe easiest way to initialize new project is to use Carina archetype, you will get correct project structure along with test samples:\n\n\nmvn archetype:generate -DarchetypeGroupId=com.qaprosoft \\\n                       -DarchetypeArtifactId=carina-archetype \\\n                       -DarchetypeVersion=1.0 \\\n                       -DgroupId=\nyour_groupId\n \\\n                       -DartifactId=\nyour_artifactId\n \\\n                       -Dname=\nyou_proj_name\n \\\n                       -Durl=\nyour_proj_url\n \\\n                       -Dversion=\nyour_proj_version\n\n\n\n\n\nIf any attribute contains spaces, it should be set in quotes (e.g.: -Dname=\"Hello World\"). In above Maven command you have to specify 5 attributes while the first 3 should be left unchanged. Let's go through these attributes:\n\n\n\n    \n\n        \nAttribute\n\n        \nMeaning\n\n        \nExample\n\n    \n\n    \n\n        \n-DgroupId\n\n        \nCompany domain in reverce order\n\n        \ncom.qaprosoft\n\n    \n\n    \n\n        \n-DartifactId\n\n        \nJava project name\n\n        \ncarina-qa\n\n    \n\n    \n\n        \n-Dname\n\n        \nName with more details\n\n        \n\"Carina Test Automation\"\n\n    \n\n    \n\n        \n-Durl\n\n        \nCompany URL\n\n        \nhttp://qaprosoft.com\n\n    \n\n    \n\n        \n-Dversion\n\n        \nProject version\n\n        \n1.0\n\n    \n\n\n\n\n\nImport to Eclipse\n\n\nIf generation is successfully complete, you would see a new project folder with a name equal to the artifactId attribute specified during generation, so navigate to that folder (where pom.xml is located) and execute the following Maven task:\n\n\nmvn clean eclipse:eclipse\n\n\n\n\nBy executing this command, Maven should resolve all dependencies, downloading required libraries to your local repository and generating Eclipse classpath. Before importing new project to Eclipse, you should link your IDE to your Maven repository by executing the following task:\n\n\nmvn -Dworkspace=\npath_to_workspace\n eclipse:configure-workspace\n\n\n\n\nHere you have to specify the absolute path to the Eclipse workspace. After that, restart Eclipse IDE. Now you can import generated projects such as \"Existing Java Project\" into Eclipse IDE.\nGenerate Eclipse workspace using command:\n\n\nmvn clean eclipse:eclipse\n\n\n\n\nNow you are ready to import project into Eclipse.", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting_started/#generating-project", 
            "text": "The easiest way to initialize new project is to use Carina archetype, you will get correct project structure along with test samples:  mvn archetype:generate -DarchetypeGroupId=com.qaprosoft \\\n                       -DarchetypeArtifactId=carina-archetype \\\n                       -DarchetypeVersion=1.0 \\\n                       -DgroupId= your_groupId  \\\n                       -DartifactId= your_artifactId  \\\n                       -Dname= you_proj_name  \\\n                       -Durl= your_proj_url  \\\n                       -Dversion= your_proj_version   If any attribute contains spaces, it should be set in quotes (e.g.: -Dname=\"Hello World\"). In above Maven command you have to specify 5 attributes while the first 3 should be left unchanged. Let's go through these attributes:  \n     \n         Attribute \n         Meaning \n         Example \n     \n     \n         -DgroupId \n         Company domain in reverce order \n         com.qaprosoft \n     \n     \n         -DartifactId \n         Java project name \n         carina-qa \n     \n     \n         -Dname \n         Name with more details \n         \"Carina Test Automation\" \n     \n     \n         -Durl \n         Company URL \n         http://qaprosoft.com \n     \n     \n         -Dversion \n         Project version \n         1.0", 
            "title": "Generating project"
        }, 
        {
            "location": "/getting_started/#import-to-eclipse", 
            "text": "If generation is successfully complete, you would see a new project folder with a name equal to the artifactId attribute specified during generation, so navigate to that folder (where pom.xml is located) and execute the following Maven task:  mvn clean eclipse:eclipse  By executing this command, Maven should resolve all dependencies, downloading required libraries to your local repository and generating Eclipse classpath. Before importing new project to Eclipse, you should link your IDE to your Maven repository by executing the following task:  mvn -Dworkspace= path_to_workspace  eclipse:configure-workspace  Here you have to specify the absolute path to the Eclipse workspace. After that, restart Eclipse IDE. Now you can import generated projects such as \"Existing Java Project\" into Eclipse IDE.\nGenerate Eclipse workspace using command:  mvn clean eclipse:eclipse  Now you are ready to import project into Eclipse.", 
            "title": "Import to Eclipse"
        }, 
        {
            "location": "/project_structure/", 
            "text": "Carina test project is structured as a standard Maven project:\n\n\ncarina-demo\n|-- pom.xml\n|-- src/test/java        \n|-- src/test/resources\n    |-- api\n    |-- testng_suites\n    |-- xls\n|-- src/main/java\n|-- src/main/resources\n    |-- l18n\n\n\n\n\n\n\nsrc/test/java\n - contains test classes organized using TestNG annotations\n\n\n\n\n\n\n\n\nsrc/test/resources\n - contains TestNG xml files, API templates and XLS data providers\n\n\n\n\n\n\n\n\nsrc/main/java\n - contains page object classes, API domains and additional utilities\n\n\n\n\n\n\n\n\nsrc/main/resources\n - contains l18n bundles, configuration properties files and MyBastis profiles if needed", 
            "title": "Project structure"
        }, 
        {
            "location": "/configuration/", 
            "text": "Configuration files\n\n\nThere are multiple properties files located in src/main/resources:\n\n \n_api.properties\n - API test endpoints reference\n\n \n_config.properties\n - global test configuration\n\n \n_database.properties\n - database connection properties\n\n \n_email.properties\n - emailable reports config\n* \n_testdata.properties\n - test user credentials\n\n\nAll properties may be retrieved in test using R class:\n\n\nR.API.get(\nGetUserMethods\n)\nR.CONFIG.get(\nbrowser\n)\nR.DATABASE.get(\ndb.url\n)\nR.EMAIL.get(\ntitle\n)\nR.TESTDATA.get(\nuser.email\n)\n\n\n\n\nDefault config properties can be obtained by\n\n\nConfiguration.get(Parameter.EXTRA_CAPABILITIES)\n\n\n\n\nAll project configuration properties are located in \n_config.properties\n file. In the table below we are providing description for most of the parameters:\n\n\n    \n\n        \nAttribute\n\n        \nMeaning\n\n        \nExample\n\n    \n\n    \n\n        \nurl\n\n        \nBase application URL\n\n        \nhttp://qaprosoft.com\n\n    \n\n    \n\n        \nbrowser\n\n        \nBrowser for testing\n\n        \nchrome / firefox / safari / iexplore\n\n    \n\n    \n\n        \nselenium_host\n\n        \nSelenium server host\n\n        \nhttp://localhost:4444/wd/hub\n\n    \n\n    \n\n        \napp_version\n\n        \nApplication version/build number for reporting\n\n        \n1.2.5\n\n    \n\n    \n\n        \nlocale\n\n        \nLocale for using L10N feature. Enabled when enable_l10n=true\n\n        \nen_GB,de_DE,fr_FR\n\n    \n\n    \n\n        \nlanguage\n\n        \nLanguage for i18n defature. Enabled when enable_i18n=true\n\n        \nen_GB,de_DE,fr_FR\n\n    \n\n    \n\n        \nimplicit_timeout\n\n        \nImplicit timeout in seconds to wait for element\n\n        \nInteger\n\n    \n\n    \n\n        \nretry_interval\n\n        \nTimeout interval between calling HTML DOM for the element.\nNote:\n in ms. For mobile automation specify number from 500-1500 range\n\n        \nInteger\n\n    \n\n    \n\n        \nauto_screenshot\n\n        \nGlobal switch for taking screenshots. When disabled only failures will be captured\n\n        \nBoolean\n\n    \n\n    \n\n        \nkeep_all_screenshots\n\n        \nKeep screenshots artifacts even for passed tests.\n\n        \n\n    \n\n    \n\n        \nreport_url\n\n        \nDirect HTTP link to Jenkins workspace report folder. Automatically specified by CI\n\n        \nhttp://localhost:8888/job /my_project/1/eTAF_Report\n\n    \n\n    \n\n        \nmax_screen_history\n\n        \nMax number of reports in history\n\n        \nInteger\n\n    \n\n    \n\n        \njira_url\n\n        \nJIRA base URL for direct links with bugs description\n\n        \nhttps://jira.carina.com/browse/\n\n    \n\n    \n\n        \nemail_list\n\n        \nComma-separated list of emails for reports\n\n        \nu1@gmail.com,u2@gmail.com\n\n    \n\n    \n\n        \nsender_email\n\n        \nEmail account for reports sending. \nNote:\n Gmail smtp settings are used by default. Update _email.properties to use your own SMTP server\n\n        \ncarina.qareport@qaprosoft.com\n\n    \n\n    \n\n        \nsender_pswd\n\n        \nEmail password for reports sending\n\n        \npwd123\n\n    \n\n    \n\n        \nenv\n\n        \nEnvironment specific configuration. More about this \nfeature\n\n        \nSTAG, PROD, DEMO\n\n    \n\n    \n\n        \nenv_arg_resolver\n\n        \nThis parametr is optional, if it isn't set default value will be used. In most cases \ndefault value is enough\n\n        \njava class \n\n    \n\n        \n\n        \nplatform\n\n        \nPlatform version for Selenium Grid\n\n        \nANDROID,IOS,WINDOWS,MAC,LINUX\n\n    \n\n        \n\n        \nbrowser_version\n\n        \nThe browser version, or the empty string if unknown for Selenium Grid\n\n        \n\"8.0\", \"52.1\"\n\n    \n\n        \n\n        \ndriver_mode\n\n        \nRule for defining WebDriver lifecycle.\n\n        \nmethod_mode / class_mode / suite_mode\n\n    \n\n        \n\n        \ndriver_mode\n\n        \nRule for defining WebDriver lifecycle.\n\n        \nmethod_mode / class_mode / suite_mode\n\n    \n\n        \n\n        \ndriver_event_listeners\n\n        \nComma-separated list of listeners. Listeners provide more logs from WebDriver and have to be instances of WebDriverEventListener\n\n        \ncom.someCompane.core .EventListener\n\n    \n\n        \n\n        \nmax_driver_count\n\n        \nMax number of drivers per thread\n\n        \nInteger\n\n    \n\n        \n\n        \ncustom_capabilities\n\n        \nName of propertie file with custom capabilities(key-value)\n\n        \ncustom.propertie\n\n    \n\n        \n\n        \nproxy_host\n\n        \nThe hostname of the server\n\n        \nhost.example.com\n\n    \n\n        \n\n        \nproxy_port\n\n        \nThe port number\n\n        \n80\n\n    \n\n        \n\n        \nproxy_protocols\n\n        \nComma-separated list of internet protocols used to carry connection information from the source requesting the connection to the destination for which the connection was requested.\n\n        \nhttp, https, ftp, socks\n\n    \n\n        \n\n        \nbrowsermob_proxy\n\n        \nBoolean parameter which enable or disable set up of mobile proxy\n\n        \ntrue, false\n\n    \n\n        \n\n        \nbrowsermob_port\n\n        \nThe port number for mobile browser (make sense only for local debugging)\n\n        \nInteger\n\n    \n\n        \n\n        \nproxy_set_to_system\n\n        \nBoolean parameter which enable or disable set up of proxy\n\n        \ntrue, false\n\n    \n\n        \n\n        \nfailure_email_list\n\n        \nComma-separated list of emails for failure reports\n\n        \nu1@mail.com,u2@mail.com\n\n    \n\n        \n\n        \ntrack_known_issues\n\n        \nBoolean parameter. If it is true and some Jira tickets assosiated with test in case of failure Jira info will be added to report\n\n        \ntrue,false\n\n    \n\n    \n\n        \nsmart_screenshot\n\n        \nThis parameter currently avaliable only for Chrome browser. Enable taking screenshots with metadata\n\n        \ntrue,false\n\n    \n\n    \n\n        \nsmart_screenshot\n\n        \nThis parameter currently avaliable only for Chrome browser. Enable taking screenshots with metadata\n\n        \ntrue,false\n\n    \n\n    \n\n        \nexplicit_timeout\n\n        \nTimeout in seconds to wait for a certain condition to occur before proceeding further in the code\n\n        \nInteger\n\n    \n\n    \n\n        \nauto_download\n\n        \nEnabled parametr prevent download dialog and download file automatically. Feature currently avaliable for Chrome and FireFox\n\n        \nfalse, true\n\n    \n\n    \n\n        \nauto_download_apps\n\n        \nMIME types / Internet Media Types. Parameter is necessary only for configure auto downloading for FireFox\n\n        \napplication/pdf, list of \nvalues\n\n    \n\n    \n\n        \nproject_report_directory\n\n        \nPath to folder where reports will be saved\n\n        \n./reports/qa\n\n    \n\n    \n\n        \nbig_screen_width\n\n        \nSreenshots will be resized according this width if there own width is bigger\n\n        \n500, 1200, Integer\n\n    \n\n    \n\n        \nbig_screen_height\n\n        \nSreenshots will be resized according this height if there own height is bigger\n\n        \n500, 1200, Integer\n\n    \n\n        \n\n        \nsmall_screen_width\n\n        \nThumbnails width\n\n        \nInteger\n\n    \n\n    \n\n        \nbig_screen_height\n\n        \nThumbnails height\n\n        \nInteger\n\n    \n\n    \n\n        \nbig_screen_height\n\n        \nThumbnails height\n\n        \nInteger\n\n    \n\n    \n\n        \ninit_retry_count\n\n        \nNumber of attempts to create driver.  Default value 0 means that it would be only 1 attempt\n\n        \nInteger\n\n    \n\n    \n\n        \ninit_retry_interval\n\n        \nInterval is seconds between attempts to create driver\n\n        \nInteger\n\n    \n\n    \n\n        \nretry_count\n\n        \nNumber of test-retrying in case of failure.  Default value 0 means that test would be performed only once\n\n        \nInteger\n\n    \n\n        \n\n        \nenable_l10n\n\n        \nEnable L10N feature\n\n        \nfalse, true\n\n    \n\n            \n\n        \nl10n_encoding\n\n        \nCharset for l10n feature\n\n        \nISO-8859-5, ISO-8859-6\n\n    \n\n    \n\n        \nenable_i18n\n\n        \nEnable i18n feature\n\n        \nfalse, true\n\n    \n\n        \n\n        \nthread_count\n\n        \nDefault number of threads to use when running tests in parallel.\n\n        \nfInteger\n\n    \n\n        \n\n        \ndata_provider_thread_count\n\n        \nDefault number of threads to use for data providers when running tests in parallel.\n\n        \nInteger\n\n    \n\n        \n\n        \ncore_log_level\n\n        \nLevel for Carina logging\n\n        \nALL, DEBUG, ERROR, WARN, FATAL, INFO, OFF, TRACE \n\n    \n\n        \n\n        \nlog_all_json\n\n        \nAPI response will be logged in JSON format\n\n        \ntrue, false\n\n    \n\n        \n\n        \ndate_format\n\n        \nDate format for DateUtils.class\n\n        \nHH:mm:ss dd/MM/yyyy, HH:mm MM/dd/yyyy\n\n    \n\n        \n\n        \ntime_format\n\n        \nDate format for DateUtils.class\n\n        \nHH:mm:ss.SSS, HH:mm a zzz\n\n    \n\n        \n\n        \ncrypto_key_path\n\n        \nPath to file with crypto key\n\n        \n./crypto\n\n    \n\n        \n\n        \nsuite_name\n\n        \nSuite name for report and TestRail. If this parameter is NULL will be get from TestNG xml (parameter suite name) or _email.properties (title)\n\n        \nAdvanced Acceptance\n\n    \n\n    \n\n        \njira_updater\n\n        \nClass contains logic to update Jira. \nNote\n Custom updater have to implement DefaultJiraUpdater, by default methods do nothing\n\n        \nCustom class\n\n    \n\n    \n\n        \njira_url\n\n        \nUrl to Jira\n\n        \nhttps://yourclass.atlassian.net\n\n    \n\n        \n\n        \njira_user\n\n        \nJira user email\n\n        \nadmin@yourcompany.com\n\n    \n\n        \n\n        \njira_password\n\n        \nJira user password\n\n        \nadmin123456\n\n    \n\n        \n\n        \njira_suite_id\n\n        \nJira suit id (if you have one)\n\n        \nInteger\n\n    \n\n    \n\n        \njira_project\n\n        \nJira project id\n\n        \nInteger\n\n    \n\n        \n\n        \njira_create_new_ticket\n\n        \nIf feature is enabled after test failure new jira ticket will be created\n\n        \ntrue, false\n\n    \n\n    \n\n        \nvideo_recording\n\n        \nIf feature is test will be recorded\n\n        \ntrue, false\n\n    \n\n    \n\n        \ntestrail_url\n\n        \nUrl to TestRail\n\n        \nhttps:/yourcompany.testrail.net\n\n    \n\n    \n\n        \ntestrail_user\n\n        \nTestRail user email\n\n        \nadmin@yourcompany.com\n\n    \n\n        \n\n        \ntestrail_updater\n\n        \nClass contains logic to update TestRail. \nNote\n Custom updater have to implement EmptyTestRailUpdater, by default methods do nothing\n\n        \nCustom class\n\n    \n\n        \n\n        \ntestrail_milestone\n\n        \nMilestone to set on TestRail for run\n\n        \nsome-milestone\n\n    \n\n        \n\n        \ntestrail_assignee\n\n        \nUser asserneed for the suit\n\n        \nasignee_user@yuorcompany.com\n\n    \n\n        \n\n        \ns3_bucket_name\n\n        \nBucket name on S3 Amazon from which you suppose to download artifacts\n\n        \nsome bucket\n\n    \n\n        \n\n        \naccess_key_id\n\n        \nAcces key id for Amamzon S3. More info \nhere\n\n        \ngkhcvdgvceUYF67897hbjsbdc\n\n    \n\n        \n\n        \nsecret_key\n\n        \nSecret key for Amamzon S3. More info \nhere\n\n        \ngkhcvdgvceUYF67897hbjsbdc\n\n    \n\n        \n\n        \ns3_local_storage\n\n        \nDirectory for downloading artefacts\n\n        \n./s3\n\n    \n\n        \n\n        \ns3_screenshot_bucket_name\n\n        \nBucket name on S3 Amamzon for saving report screenshots\n\n        \nScreenshot bucket name\n\n    \n\n        \n\n        \ns3_save_screenshots\n\n        \nIf enabled screenshots would be saved on S3 Amamzon\n\n        \nfalse, true\n\n    \n\n        \n\n        \nhockeyapp_token\n\n        \nToken for authentication in Hockey App\n\n        \ngkhcvdgvceUYF67897hbjsbdc\n\n    \n\n        \n\n        \nhockeyapp_local_storage\n\n        \nDirectory for Hockey App artefacts\n\n        \n./hockeyapp\n\n    \n\n        \n\n        \nadd_new_localization\n\n        \nShould be set to 'true' if you want to create new localization files for required Locale.Otherwise there will be just localization checking\n\n        \nfalse, true\n\n    \n\n        \n\n        \nadd_new_localization_encoding\n\n        \nEncoding for new lokalization\n\n        \nutf-16, utf-32\n\n    \n\n        \n\n        \nadd_new_localization_path\n\n        \nPath where created localization properties should be saved. If null - they will be added to artifactory folder in report\n\n        \nutf-16, utf-32\n\n    \n\n        \n\n        \nadd_new_localization_property_name\n\n        \nPath where created localization properties should be saved. If null - they will be added to artifactory folder in report\n\n        \nBasic template for property name.\n\n    \n\n        \n\n        \ncucumber_tests\n\n        \nIf parametrs contains true Cucumber tests will be started\n\n        \ntrue, false\n\n    \n\n        \n\n        \ncucumber_tests_app_version\n\n        \nVersion of app using in Cucumber tests\n\n        \n2.013\n\n    \n\n        \n\n        \ncucumber_tests_name\n\n        \nCucucmber tests name\n\n        \ncucumber tests\n\n    \n\n        \n\n        \ncucumber_tests_results_image_resize\n\n        \nPercent of Scaling from default image. 100 - same size\n\n        \nInteger\n\n    \n\n        \n\n        \ncucumber_report_subfolder\n\n        \nSubfolder on Jenkins (jenkins_url/{someNumbersFr EveryRun}/ artifacts/CucumberReport/ {cucumber_report_subfolder})\n\n        \ncucumber-reports\n\n    \n\n        \n\n        \ncucumber_user_js_in_report\n\n        \nEnabled parameter help to get more beautiful reports\n\n        \ntrue, false\n\n    \n\n        \n\n        \ntls_keysecure_location\n\n        \nPath to directory with tls secure keys\n\n        \n./tls/keysecure\n\n    \n\n        \n\n        \nhealth_check_class\n\n        \nClass to execute helth checks\n\n        \nCustom class\n\n    \n\n        \n\n        \nhealth_check_methods\n\n        \nComma-separate list of methods of health_check_class to execute preliminary\n\n        \ndoThis, doThat\n\n    \n\n\n\nMost of the properties may be read in the following way:\n\n\nConfiguration.get(Parameter.URL) // returns string value\nConfiguration.getBoolean(Parameter.AUTO_SCREENSHOT) // returns boolean value\nConfiguration.getInt(Parameter.SMALL_SCREEN_WIDTH) // returns integer value\nConfiguration.getDouble(Parameter.BROWSER_VERSION) // returns double value\n\n\n\n\nEnvironment specific configuration\n\n\nIn some cases it is required to support multiple environments for testing. Let's assume we have STAG and PROD environments which have different application URLs. In this case we need to specify the following properties in _config.properties:\n\n\nenv=PROD\nSTAG.url=http://stag-app-server.com\nPROD.url=http://prod-app-server.com\n\n\n\n\nAnd get env-specific argument in test the following way:\n\n\nConfiguration.getEnvArg(\nurl\n)\n\n\n\n\nAs a result you switch between environments just changing env argument in _config.properties file.", 
            "title": "Configuration"
        }, 
        {
            "location": "/configuration/#configuration-files", 
            "text": "There are multiple properties files located in src/main/resources:   _api.properties  - API test endpoints reference   _config.properties  - global test configuration   _database.properties  - database connection properties   _email.properties  - emailable reports config\n*  _testdata.properties  - test user credentials  All properties may be retrieved in test using R class:  R.API.get( GetUserMethods )\nR.CONFIG.get( browser )\nR.DATABASE.get( db.url )\nR.EMAIL.get( title )\nR.TESTDATA.get( user.email )  Default config properties can be obtained by  Configuration.get(Parameter.EXTRA_CAPABILITIES)  All project configuration properties are located in  _config.properties  file. In the table below we are providing description for most of the parameters: \n     \n         Attribute \n         Meaning \n         Example \n     \n     \n         url \n         Base application URL \n         http://qaprosoft.com \n     \n     \n         browser \n         Browser for testing \n         chrome / firefox / safari / iexplore \n     \n     \n         selenium_host \n         Selenium server host \n         http://localhost:4444/wd/hub \n     \n     \n         app_version \n         Application version/build number for reporting \n         1.2.5 \n     \n     \n         locale \n         Locale for using L10N feature. Enabled when enable_l10n=true \n         en_GB,de_DE,fr_FR \n     \n     \n         language \n         Language for i18n defature. Enabled when enable_i18n=true \n         en_GB,de_DE,fr_FR \n     \n     \n         implicit_timeout \n         Implicit timeout in seconds to wait for element \n         Integer \n     \n     \n         retry_interval \n         Timeout interval between calling HTML DOM for the element. Note:  in ms. For mobile automation specify number from 500-1500 range \n         Integer \n     \n     \n         auto_screenshot \n         Global switch for taking screenshots. When disabled only failures will be captured \n         Boolean \n     \n     \n         keep_all_screenshots \n         Keep screenshots artifacts even for passed tests. \n         \n     \n     \n         report_url \n         Direct HTTP link to Jenkins workspace report folder. Automatically specified by CI \n         http://localhost:8888/job /my_project/1/eTAF_Report \n     \n     \n         max_screen_history \n         Max number of reports in history \n         Integer \n     \n     \n         jira_url \n         JIRA base URL for direct links with bugs description \n         https://jira.carina.com/browse/ \n     \n     \n         email_list \n         Comma-separated list of emails for reports \n         u1@gmail.com,u2@gmail.com \n     \n     \n         sender_email \n         Email account for reports sending.  Note:  Gmail smtp settings are used by default. Update _email.properties to use your own SMTP server \n         carina.qareport@qaprosoft.com \n     \n     \n         sender_pswd \n         Email password for reports sending \n         pwd123 \n     \n     \n         env \n         Environment specific configuration. More about this  feature \n         STAG, PROD, DEMO \n     \n     \n         env_arg_resolver \n         This parametr is optional, if it isn't set default value will be used. In most cases  default value is enough \n         java class  \n     \n         \n         platform \n         Platform version for Selenium Grid \n         ANDROID,IOS,WINDOWS,MAC,LINUX \n     \n         \n         browser_version \n         The browser version, or the empty string if unknown for Selenium Grid \n         \"8.0\", \"52.1\" \n     \n         \n         driver_mode \n         Rule for defining WebDriver lifecycle. \n         method_mode / class_mode / suite_mode \n     \n         \n         driver_mode \n         Rule for defining WebDriver lifecycle. \n         method_mode / class_mode / suite_mode \n     \n         \n         driver_event_listeners \n         Comma-separated list of listeners. Listeners provide more logs from WebDriver and have to be instances of WebDriverEventListener \n         com.someCompane.core .EventListener \n     \n         \n         max_driver_count \n         Max number of drivers per thread \n         Integer \n     \n         \n         custom_capabilities \n         Name of propertie file with custom capabilities(key-value) \n         custom.propertie \n     \n         \n         proxy_host \n         The hostname of the server \n         host.example.com \n     \n         \n         proxy_port \n         The port number \n         80 \n     \n         \n         proxy_protocols \n         Comma-separated list of internet protocols used to carry connection information from the source requesting the connection to the destination for which the connection was requested. \n         http, https, ftp, socks \n     \n         \n         browsermob_proxy \n         Boolean parameter which enable or disable set up of mobile proxy \n         true, false \n     \n         \n         browsermob_port \n         The port number for mobile browser (make sense only for local debugging) \n         Integer \n     \n         \n         proxy_set_to_system \n         Boolean parameter which enable or disable set up of proxy \n         true, false \n     \n         \n         failure_email_list \n         Comma-separated list of emails for failure reports \n         u1@mail.com,u2@mail.com \n     \n         \n         track_known_issues \n         Boolean parameter. If it is true and some Jira tickets assosiated with test in case of failure Jira info will be added to report \n         true,false \n     \n     \n         smart_screenshot \n         This parameter currently avaliable only for Chrome browser. Enable taking screenshots with metadata \n         true,false \n     \n     \n         smart_screenshot \n         This parameter currently avaliable only for Chrome browser. Enable taking screenshots with metadata \n         true,false \n     \n     \n         explicit_timeout \n         Timeout in seconds to wait for a certain condition to occur before proceeding further in the code \n         Integer \n     \n     \n         auto_download \n         Enabled parametr prevent download dialog and download file automatically. Feature currently avaliable for Chrome and FireFox \n         false, true \n     \n     \n         auto_download_apps \n         MIME types / Internet Media Types. Parameter is necessary only for configure auto downloading for FireFox \n         application/pdf, list of  values \n     \n     \n         project_report_directory \n         Path to folder where reports will be saved \n         ./reports/qa \n     \n     \n         big_screen_width \n         Sreenshots will be resized according this width if there own width is bigger \n         500, 1200, Integer \n     \n     \n         big_screen_height \n         Sreenshots will be resized according this height if there own height is bigger \n         500, 1200, Integer \n     \n         \n         small_screen_width \n         Thumbnails width \n         Integer \n     \n     \n         big_screen_height \n         Thumbnails height \n         Integer \n     \n     \n         big_screen_height \n         Thumbnails height \n         Integer \n     \n     \n         init_retry_count \n         Number of attempts to create driver.  Default value 0 means that it would be only 1 attempt \n         Integer \n     \n     \n         init_retry_interval \n         Interval is seconds between attempts to create driver \n         Integer \n     \n     \n         retry_count \n         Number of test-retrying in case of failure.  Default value 0 means that test would be performed only once \n         Integer \n     \n         \n         enable_l10n \n         Enable L10N feature \n         false, true \n     \n             \n         l10n_encoding \n         Charset for l10n feature \n         ISO-8859-5, ISO-8859-6 \n     \n     \n         enable_i18n \n         Enable i18n feature \n         false, true \n     \n         \n         thread_count \n         Default number of threads to use when running tests in parallel. \n         fInteger \n     \n         \n         data_provider_thread_count \n         Default number of threads to use for data providers when running tests in parallel. \n         Integer \n     \n         \n         core_log_level \n         Level for Carina logging \n         ALL, DEBUG, ERROR, WARN, FATAL, INFO, OFF, TRACE  \n     \n         \n         log_all_json \n         API response will be logged in JSON format \n         true, false \n     \n         \n         date_format \n         Date format for DateUtils.class \n         HH:mm:ss dd/MM/yyyy, HH:mm MM/dd/yyyy \n     \n         \n         time_format \n         Date format for DateUtils.class \n         HH:mm:ss.SSS, HH:mm a zzz \n     \n         \n         crypto_key_path \n         Path to file with crypto key \n         ./crypto \n     \n         \n         suite_name \n         Suite name for report and TestRail. If this parameter is NULL will be get from TestNG xml (parameter suite name) or _email.properties (title) \n         Advanced Acceptance \n     \n     \n         jira_updater \n         Class contains logic to update Jira.  Note  Custom updater have to implement DefaultJiraUpdater, by default methods do nothing \n         Custom class \n     \n     \n         jira_url \n         Url to Jira \n         https://yourclass.atlassian.net \n     \n         \n         jira_user \n         Jira user email \n         admin@yourcompany.com \n     \n         \n         jira_password \n         Jira user password \n         admin123456 \n     \n         \n         jira_suite_id \n         Jira suit id (if you have one) \n         Integer \n     \n     \n         jira_project \n         Jira project id \n         Integer \n     \n         \n         jira_create_new_ticket \n         If feature is enabled after test failure new jira ticket will be created \n         true, false \n     \n     \n         video_recording \n         If feature is test will be recorded \n         true, false \n     \n     \n         testrail_url \n         Url to TestRail \n         https:/yourcompany.testrail.net \n     \n     \n         testrail_user \n         TestRail user email \n         admin@yourcompany.com \n     \n         \n         testrail_updater \n         Class contains logic to update TestRail.  Note  Custom updater have to implement EmptyTestRailUpdater, by default methods do nothing \n         Custom class \n     \n         \n         testrail_milestone \n         Milestone to set on TestRail for run \n         some-milestone \n     \n         \n         testrail_assignee \n         User asserneed for the suit \n         asignee_user@yuorcompany.com \n     \n         \n         s3_bucket_name \n         Bucket name on S3 Amazon from which you suppose to download artifacts \n         some bucket \n     \n         \n         access_key_id \n         Acces key id for Amamzon S3. More info  here \n         gkhcvdgvceUYF67897hbjsbdc \n     \n         \n         secret_key \n         Secret key for Amamzon S3. More info  here \n         gkhcvdgvceUYF67897hbjsbdc \n     \n         \n         s3_local_storage \n         Directory for downloading artefacts \n         ./s3 \n     \n         \n         s3_screenshot_bucket_name \n         Bucket name on S3 Amamzon for saving report screenshots \n         Screenshot bucket name \n     \n         \n         s3_save_screenshots \n         If enabled screenshots would be saved on S3 Amamzon \n         false, true \n     \n         \n         hockeyapp_token \n         Token for authentication in Hockey App \n         gkhcvdgvceUYF67897hbjsbdc \n     \n         \n         hockeyapp_local_storage \n         Directory for Hockey App artefacts \n         ./hockeyapp \n     \n         \n         add_new_localization \n         Should be set to 'true' if you want to create new localization files for required Locale.Otherwise there will be just localization checking \n         false, true \n     \n         \n         add_new_localization_encoding \n         Encoding for new lokalization \n         utf-16, utf-32 \n     \n         \n         add_new_localization_path \n         Path where created localization properties should be saved. If null - they will be added to artifactory folder in report \n         utf-16, utf-32 \n     \n         \n         add_new_localization_property_name \n         Path where created localization properties should be saved. If null - they will be added to artifactory folder in report \n         Basic template for property name. \n     \n         \n         cucumber_tests \n         If parametrs contains true Cucumber tests will be started \n         true, false \n     \n         \n         cucumber_tests_app_version \n         Version of app using in Cucumber tests \n         2.013 \n     \n         \n         cucumber_tests_name \n         Cucucmber tests name \n         cucumber tests \n     \n         \n         cucumber_tests_results_image_resize \n         Percent of Scaling from default image. 100 - same size \n         Integer \n     \n         \n         cucumber_report_subfolder \n         Subfolder on Jenkins (jenkins_url/{someNumbersFr EveryRun}/ artifacts/CucumberReport/ {cucumber_report_subfolder}) \n         cucumber-reports \n     \n         \n         cucumber_user_js_in_report \n         Enabled parameter help to get more beautiful reports \n         true, false \n     \n         \n         tls_keysecure_location \n         Path to directory with tls secure keys \n         ./tls/keysecure \n     \n         \n         health_check_class \n         Class to execute helth checks \n         Custom class \n     \n         \n         health_check_methods \n         Comma-separate list of methods of health_check_class to execute preliminary \n         doThis, doThat \n      \nMost of the properties may be read in the following way:  Configuration.get(Parameter.URL) // returns string value\nConfiguration.getBoolean(Parameter.AUTO_SCREENSHOT) // returns boolean value\nConfiguration.getInt(Parameter.SMALL_SCREEN_WIDTH) // returns integer value\nConfiguration.getDouble(Parameter.BROWSER_VERSION) // returns double value", 
            "title": "Configuration files"
        }, 
        {
            "location": "/configuration/#environment-specific-configuration", 
            "text": "In some cases it is required to support multiple environments for testing. Let's assume we have STAG and PROD environments which have different application URLs. In this case we need to specify the following properties in _config.properties:  env=PROD\nSTAG.url=http://stag-app-server.com\nPROD.url=http://prod-app-server.com  And get env-specific argument in test the following way:  Configuration.getEnvArg( url )  As a result you switch between environments just changing env argument in _config.properties file.", 
            "title": "Environment specific configuration"
        }, 
        {
            "location": "/execution/", 
            "text": "There are a several options to execute the test: you may run test suite from Eclipse IDE or initiate test execution from the console using Maven Surefire plugin built into Carina framework. Before running tests make sure you have downloaded Selenium standalone server jar file and started it by the following command:\n\n\njava -jar selenium-server-standalone-3.6.0.jar\n\n\n\n\nTo run the test suite from Eclipse IDE, just select the required TestNG xml file: Right click \n Run As \n TestNG suite\n\n\n\n\nTo run the same test suite from the console, navigate to the test project root (where pom.xml is located) and execute the following command:\n\n\nmvn clean -Dsuite=api test", 
            "title": "Execution"
        }, 
        {
            "location": "/automation/web/", 
            "text": "TODO", 
            "title": "Web automation"
        }, 
        {
            "location": "/automation/web/#todo", 
            "text": "", 
            "title": "TODO"
        }, 
        {
            "location": "/automation/mobile/", 
            "text": "TODO", 
            "title": "Mobile automation"
        }, 
        {
            "location": "/automation/mobile/#todo", 
            "text": "", 
            "title": "TODO"
        }, 
        {
            "location": "/automation/api/", 
            "text": "TODO", 
            "title": "API automation"
        }, 
        {
            "location": "/automation/api/#todo", 
            "text": "", 
            "title": "TODO"
        }, 
        {
            "location": "/dataproviders/", 
            "text": "TODO", 
            "title": "Dataproviders"
        }, 
        {
            "location": "/dataproviders/#todo", 
            "text": "", 
            "title": "TODO"
        }, 
        {
            "location": "/releases/", 
            "text": "Release notes", 
            "title": "Release notes"
        }, 
        {
            "location": "/releases/#release-notes", 
            "text": "", 
            "title": "Release notes"
        }
    ]
}